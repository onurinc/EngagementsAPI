name: EngagementsAPI workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore EngagementsAPI/EngagementsAPI.csproj
    - name: Build
      run: dotnet build EngagementsAPI/EngagementsAPI.csproj --no-restore

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore EngagementsAPI/EngagementsAPI.csproj
    - name: Build
      run: dotnet build EngagementsAPI/EngagementsAPI.csproj --no-restore
    - name: Test
      run: dotnet test EngagementsAPI/EngagementsAPI.csproj --no-build --verbosity normal

  docker_build_push:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Docker Build & Push Action
      uses: mr-smithers-excellent/docker-build-push@v6.2
      with:
        image: onurinc/engagementsapi
        tags: v1, latest
        registry: docker.io
        dockerfile: EngagementsAPI/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
        creds: '${{secrets.AZURE_CREDENTIALS}}'
        # Resource Group Name
        resource-group: innertrader
        # AKS Cluster Name
        cluster-name: innertrader

    - name: Create secret in Kubernetes cluster
      uses: Azure/k8s-create-secret@v1.1
      with:
        # Container registry url
        container-registry-url: https://index.docker.io/v1/
        # Container registry username
        container-registry-username: '${{secrets.DOCKER_LOGIN}}'
        # Container registry password
        container-registry-password:  '${{secrets.DOCKER_PASSWORD}}'
        # Type of Kubernetes secret. For example, docker-registry or generic
        secret-type: docker-registry
        # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
        secret-name: docker-image-pull-secret

    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v1
      with:        
        # Path to the manifest files which will be used for deployment.
        manifests: |
          k8s/deployment.yml
        # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
        images: onurinc/engagementsapi
        # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
        imagepullsecrets: docker-image-pull-secret
        # deploy/promote/reject
        action: deploy
